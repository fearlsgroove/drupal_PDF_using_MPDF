<?php

/**
 * @file
 * Prints PDF for a given html node view.
 */

define('MPDF_LIB_PATH', 'sites/all/libraries/mpdf');
define('MPDF_MODULE_PATH', drupal_get_path('module', 'pdf_using_mpdf'));
define('MPDF_API_FILE', 'mpdf.php');
define('PDF_DEFAULT_FILENAME', '[site:name] - [node:title] - [node:changed:custom:Y-m-d]');
define('PDF_FONT_SIZE', 10);
define('PDF_PAGE_SIZE', 'A4');

// Loading 'pdf_using_mpdf.pages.inc' file.
module_load_include('inc', 'pdf_using_mpdf', 'pdf_using_mpdf.pages');

/**
 * Implements hook_help().
 */
function pdf_using_mpdf_help($path, $arg) {
  if ($path == 'admin/help#pdf_using_mpdf') {

    $data = '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . t('This module is used Conversion of HTML page to PDF using mPDF PHP Library. This module allows you to generate the pdf documents of any node:') . '<br /><br /><strong>' . t('PDF creation (at www.example.com/show_pdf/nid)') . '</strong><br /><br /> ' . t('where nid is the node id of content to render.') . '<br /><br />' . t('By creating your own CSS file and/or the pdf--node.tpl.php files, it is possible to change the look of the output page to suit your taste. For a more fine-grained customization, it is possible to use a template file named:') . '<br /><br /><strong>' . t('Drupal 7: pdf--node--[node-type|node-id].tpl.php') . '</strong><br />' . t('located in the same module directory i.e., "pdf_using_mpdf".') . '<br />' . t('Where node-type & node-id are Drupal node\'s type (e.g. page, story, etc.) and node-id (eg: 12) respectively.') . '<br /><br /><strong>' . t('API Function : pdf_using_mpdf_api()') . '</strong><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' . t('This API function is available to content developers that prefer  to generate a pdf file of custom path. The function takes two parameters, first a rendered html content and an optional second parameter, name of the pdf file. E.g:   pdf_using_mpdf_api($html) where $html is any html content.') . '<br /><br />' . t('You must install the following third-party tools to generate PDFs:') . '<br /><br />' . l(t('mPDF'), 'http://www.mpdf1.com') . '<br /><br />' . t('Please follow the instructions in the README.txt files carefully.') . '<br /><br />' . t('Developed By :') . ' ' . l(t('OSSCube'), 'http://www.osscube.com/') . '<br /><br /></p>';
    return $data;
  }
}

/**
 * Implements hook_permission().
 */
function pdf_using_mpdf_permission() {
  return array(
    'administer custom mpdf' => array(
      'title' => t('PDF using mPDF'),
      'description' => t('Permission for HTML to PDF conversion'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function pdf_using_mpdf_menu() {
  $items['admin/config/user-interface/mpdf'] = array(
    'title' => 'PDF using mPDF settings',
    'description' => 'configuration of custom mPDF setting',
    'page callback' => 'drupal_get_form',
    'access callback' => 'admin_config_access',
    'page arguments' => array('pdf_using_mpdf_config'),
    'weight' => -1,
    'file' => 'pdf_using_mpdf.admin.inc',
  );
  $items['show_pdf/%'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pdf_using_mpdf_generate_pdf'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'pdf_using_mpdf.pages.inc',
  );
  return $items;
}

/**
 * Configuration settings can only be accessed by the administrator always.
 */
function admin_config_access() {
  global $user;
  if ($user->uid == 0 || $user->uid != 1) {
    return FALSE;
  }
  else {
    return TRUE;
  }
}

/**
 * Implements hook_theme().
 */
function pdf_using_mpdf_theme() {
  $theme = array();
  // For node type only.
  $arg = arg();
  $node = _pdf_using_mpdf_node_generator($arg[count($arg) - 1]);
  if (!empty($node)) {
    $theme['pdf_node'] = array(
    'variables' => array('node' => NULL),
    'template' => 'pdf--node',
    );
    $theme['pdf_node_type'] = array(
      'variables' => array('node' => NULL),
      'template' => 'pdf--node--' . $node->type,
    );
    $theme['pdf_node_id'] = array(
      'variables' => array('node' => NULL),
      'template' => 'pdf--node--' . $node->nid,
    );
  }
  return $theme;
}

/**
 * Implements hook_node_view_alter().
 */
function pdf_using_mpdf_node_view_alter(&$build) {
  if (user_access('administer custom mpdf')) {
    if ($build['#view_mode'] == 'full') {
      $build['links']['node']['#links']['generate_pdf'] = array(
        'href' => 'show_pdf/' . $build['#node']->nid,
        'title' => t('Generate PDF document'),
      );
    }
  }
}

/**
 * API to generate a PDF file.
 *
 * @param string $html
 *   html is rendered HTML that will be converted into PDF.
 *
 * @param string $pdf_filename
 *   pdf_filename is Optional name of the PDF file.
 *
 * @return mpdf
 *   PDF file generated using mPDF library.
 */
function pdf_using_mpdf_api($html, $pdf_filename = NULL) {
  if ($pdf_filename === NULL) {
    $filename = explode(variable_get('pdf_filename', 'PDF_DEFAULT_FILENAME'), '[site:name]');
    $pdf_filename = token_replace($filename[0]);
  }
  return _pdf_using_mpdf_generator($html, $pdf_filename);
}
/* *********************** Module End ***************************** */
