<?php

define('MPDF_LIB_PATH', 'sites/all/libraries/mpdf');
define('MPDF_API_FILE', 'mpdf.php');
define('PDF_DEFAULT_FILENAME' , '[site:name] - [node:title] - [node:changed:custom:Y-m-d]' );
define('PDF_FONT_SIZE', 10);
define('PDF_PAGE_SIZE', 'A4');


/**
* Implement Hook_help()
*/
function pdf_using_mpdf_help($path , $arg)
{
	if( $path == 'admin/help#mpdf') {
		$data = t('HTML to PDF conversion Using mPDF.');
		return $data;
	}
}

/**
 * Implement Hook_permission()
 */
function pdf_using_mpdf_permission()
{
	return array(
		'adminsration custom mpdf' => array(
				'title' => t('Custom MPDF'),
				'description' => t('Permission for HTML to PDF conversion'),
			),
	);
}

/**
 * Implement Hook_menu()
 */
function pdf_using_mpdf_menu()
{
	$menu['admin/config/user-interface/mpdf'] = array(
		'title' => 'Custom mPDF',
		'description' => 'configuration of Custom mPDF setting',
		'page callback' => 'drupal_get_form',
		'access callback' => true,
		'page arguments' => array('pdf_using_mpdf_config'),
		'weight' => 1,
	);
	return $menu;
}

/**
 * Admin configure form control on page
 */
function pdf_using_mpdf_config()
{
  $file =  file_scan_directory( MPDF_LIB_PATH , '/.*\.php$/' ) ;

	if ( isset ($file[MPDF_LIB_PATH . '/' . MPDF_API_FILE] ) ) {
		variable_set('mpdf_library_exist', true);
		$form['pdf'] = array(
			'#type' => 'fieldset',
			'#title' => t('PDF Tool Option'),
		);
		$form['pdf']['radio_btn'] = array(
			'#type' => 'markup',
			'#title' => 'MPDF library',
			'#markup' => t('Add mPDF library to "sites/all/library/mpdf/mpdf.php"'),
		);
		$form['pdf']['other'] = array(
			'#type' => 'fieldset',
			'#title' => t('Other Option'),
		);
		$form['pdf']['other']['link'] = array(
			'#type' => 'radios',
			'#title' => t('Link Visiblity'),
			'#options' => array( t('Show on every page except the listed pages :') , t('Show on only the listed pages :') ),
		);
		$form['pdf']['other']['link_page'] = array(
			'#type' => 'textarea',
			'#value' => 'NODE/*',
			'#description' => t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are blog for the blog page and blog/* for every personal blog. <front> is the front page."),
			);
		$form['pdf']['save_pdf'] = array(
			'#type' => 'radios',
			'#title' => t('Open PDF File in'),
			'#options' => array( t('Web Browser'), t('Save dialog box') ),
		);
		$form['pdf']['page_size'] = array(
			'#type' => 'select',
			'#title' => t('Page Size'),
			'#options' => array('A4', 'Letter', 'Portrait'),
		);
		$form['pdf']['font_family'] = array(
			'#type' => 'textfield',
			'#title' => 'Font Family',
			'#value' => t('dejavusans'),
		);
		$form['pdf']['font_size'] = array(
			'#type' => 'textfield',
			'#title' => t('Font Size'),
			'#value' => '10',
		);
		$form['pdf']['header'] = array(
			'#type' => 'fieldset',
			'#title' => t('PDF Header Option'),
		);
		// 'h' for header
		$form['pdf']['header']['h_left'] = array(
			'#type' => 'textfield',
			'#title' => t('Left side content'),
			'#description' => t('if not required, left blank.'),
		);
			$form['pdf']['header']['h_center'] = array(
			'#type' => 'textfield',
			'#title' => t('Center content'),
			'#description' => t('if not required, left blank.'),
		);
			$form['pdf']['header']['h_right'] = array(
			'#type' => 'textfield',
			'#title' => t('Right side content'),
			'#description' => t('if not required, left blank.'),
		);
			$form['pdf']['footer'] = array(
			'#type' => 'fieldset',
			'#title' => t('PDF Footer Option'),
		);
		// 'f' for footer
		$form['pdf']['footer']['f_left'] = array(
			'#type' => 'textfield',
			'#title' => t('Left side content'),
			'#description' => t('if not required, left blank.'),
		);
			$form['pdf']['footer']['f_center'] = array(
			'#type' => 'textfield',
			'#title' => t('Center content'),
			'#description' => t('if not required, left blank.'),
		);
			$form['pdf']['footer']['f_right'] = array(
			'#type' => 'textfield',
			'#title' => t('Right side content'),
			'#description' => t('if not required, left blank.'),
		);
		$form['pdf']['filename'] = array(
			'#type' => 'textfield',
			'#title' => t('PDF Filename'),
			'#value' => '[site:name] - [node:title] - [node:changed:custom:Y-m-d]',
		);
		$form['pdf']['save_config'] = array(
			'#type' => 'submit',
			'#value' => t('Save Configuration'),
		);
	}
  else
  {
    variable_set('mpdf_library_exist', false);
	 	$form['pdf'] = array(
      '#type' => 'markup',
      '#markup' => '<p>' . t("No mPDF Library Found! Please dowload mPDF supported PHP PDF generation tool from " . l('MPDF Library', 'http://www.mpdf1.com/') ) . '</p>',
    );
	}
	return $form;    
}

/**
 * configuration form control on submit
 */
function mpdf_config_submit($form, $form_state)
{

/*
	$node= node_load('8');
	$pdf_filename = variable_get( 'pdf_filename' , 'PDF_DEFAULT_FILENAME');
	print token_replace( $pdf_filename , array('node' => $node) );
*/

	if($_REQUEST['form_id'] == 'mpdf_config')	{
		
		variable_set( 'pdf_link_page' , $_REQUEST['link_page'] );
		variable_set( 'pdf_page_size' , $_REQUEST['page_size'] );
		variable_set( 'pdf_font_family' , $_REQUEST['font_family'] );
		variable_set( 'pdf_font_size' , $_REQUEST['font_size'] );
		variable_set( 'pdf_filename' , $_REQUEST['filename'] );
		variable_set( 'pdf_header_left' , $_REQUEST['h_left'] );
		variable_set( 'pdf_header_center' , $_REQUEST['h_center'] );
		variable_set( 'pdf_header_right' , $_REQUEST['h_right'] );
		variable_set( 'pdf_footer_left' , $_REQUEST['f_left'] );
		variable_set( 'pdf_footer_center' , $_REQUEST['f_center'] );
		variable_set( 'pdf_footer_right' , $_REQUEST['f_right'] );
	}

}

/**
 * configuration form Validatation check
 */
function mpdf_config_validate($form, $form_state)
{
//	print_r($_POST);

	if( !(is_numeric($_REQUEST['font_size']) && $_REQUEST['font_size'] > 1) )	
		form_set_error('font_size', t('Font size should be numeric and greater than 1.') );

	
}

/* ************ Module End ****************** */
